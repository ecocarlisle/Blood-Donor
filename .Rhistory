file <- "train.csv"
library(readr)
install.packages("readr")
install.packages("lubridate")
library(readr)
library(lubridate)
#     library(arules)
library(plyr)
library(caret)
install.packages("caret")
library(caret)
set.seed(9560)
q()
setwd("~/GitHub/Blood Donor")
require(xgboost)
library(caret)
library(readr)
# load the data
blood <- read.csv(file.choose()) # load the "charity.csv" file
#EDA
attach(blood)
length(names(blood))
names(blood)
str(blood)
summary(blood)
head(blood,10)
cor(blood[2:6])
# Months.since.Last.Donation,
require(MASS)
par <- par(mfrow = c(3, 1))
var1 = Months.since.Last.Donation
hist(var1, col = "grey", main = "R default", ylab = "Frequency",freq = FALSE)
qqnorm(var1)
qqline(var1)
par(mfrow = c(1, 1))
boxplot(var1 ~ Made.Donation.in.March.2007, notch = TRUE, col = "grey",ylab = "inca", main = "Boxplot",boxwex = 0.5, varwidth = TRUE)
plot(Months.since.Last.Donation)
pairs(cbind(Months.since.Last.Donation,Months.since.First.Donation,Total.Volume.Donated..c.c..,Number.of.Donations), gap = 0, panel = panel.smooth)
blood.rate <- Total.Volume.Donated..c.c../Months.since.First.Donation
var1 = blood.rate
hist(var1, col = "grey", main = "R default", ylab = "Frequency",freq = FALSE)
qqnorm(var1)
qqline(var1)
par(mfrow = c(1, 1))
boxplot(var1 ~ Made.Donation.in.March.2007, notch = TRUE, col = "grey",ylab = "First Donation", main = "Boxplot",boxwex = 0.5, varwidth = TRUE)
table(Months.since.First.Donation,Made.Donation.in.March.2007)
pairs(cbind(blood.rate,Months.since.Last.Donation,Months.since.First.Donation,Total.Volume.Donated..c.c..,Number.of.Donations), gap = 0, panel = panel.smooth)
blood$Number.of.Donations = log(Number.of.Donations)
bound <- floor((nrow(blood)/5)*2)         #define % of training and test set
blood.t <- blood[sample(nrow(blood)), ]           #sample rows
data.train <- blood.t[1:bound, ]              #get training set
data.valid <- blood.t[(bound+1):nrow(blood.t), ]    #get validation set
x.train <- data.train[,2:5]
c.train <- data.train[,6] # 2007.donations
n.train.c <- length(c.train) # 288
#data.valid <- blood.t[blood$Part=="Valid",]
x.valid <- data.valid[,2:5]
c.valid <- data.valid[,6] # 2007 donations
n.valid.c <- length(c.valid) # 288
data.test <- read.csv("test.csv")
#data.test$Total.Volume.Donated..c.c.. <- NULL
n.test <- dim(data.test)[1] # 200
x.test <- data.test[,2:5]
x.train.mean <- apply(x.train, 2, mean)
x.train.sd <- apply(x.train, 2, sd)
x.train.std <- t((t(x.train)-x.train.mean)/x.train.sd) # standardize to have zero mean and unit sd
apply(x.train.std, 2, mean) # check zero mean
apply(x.train.std, 2, sd) # check unit sd
data.train.std.c <- data.frame(x.train.std, Made.Donation.in.March.2007=c.train) # to classify donors
x.valid.std <- t((t(x.valid)-x.train.mean)/x.train.sd) # standardize using training mean and sd
data.valid.std.c <- data.frame(x.valid.std, Made.Donation.in.March.2007=c.valid) # to classify 2007 donors
x.test.std <- t((t(x.test)-x.train.mean)/x.train.sd) # standardize using training mean and sd
data.test.std <- data.frame(x.test.std)
model.lda1 <- lda(Made.Donation.in.March.2007 ~ Months.since.Last.Donation + Number.of.Donations + blood.rate,
data.train.std.c) # include additMonths.since.First.Donationional terms on the fly using I()
model.lda1
blood$blood.rate <- Total.Volume.Donated..c.c../Months.since.First.Donation
bound <- floor((nrow(blood)/5)*2)         #define % of training and test set
blood.t <- blood[sample(nrow(blood)), ]           #sample rows
data.train <- blood.t[1:bound, ]              #get training set
data.valid <- blood.t[(bound+1):nrow(blood.t), ]    #get validation set
# set up data for analysis
x.train <- data.train[,2:5]
c.train <- data.train[,6] # 2007.donations
n.train.c <- length(c.train) # 288
#data.valid <- blood.t[blood$Part=="Valid",]
x.valid <- data.valid[,2:5]
c.valid <- data.valid[,6] # 2007 donations
n.valid.c <- length(c.valid) # 288
data.test <- read.csv("test.csv")
#data.test$Total.Volume.Donated..c.c.. <- NULL
n.test <- dim(data.test)[1] # 200
x.test <- data.test[,2:5]
x.train.mean <- apply(x.train, 2, mean)
x.train.sd <- apply(x.train, 2, sd)
x.train.std <- t((t(x.train)-x.train.mean)/x.train.sd) # standardize to have zero mean and unit sd
apply(x.train.std, 2, mean) # check zero mean
apply(x.train.std, 2, sd) # check unit sd
data.train.std.c <- data.frame(x.train.std, Made.Donation.in.March.2007=c.train) # to classify donors
x.valid.std <- t((t(x.valid)-x.train.mean)/x.train.sd) # standardize using training mean and sd
data.valid.std.c <- data.frame(x.valid.std, Made.Donation.in.March.2007=c.valid) # to classify 2007 donors
x.test.std <- t((t(x.test)-x.train.mean)/x.train.sd) # standardize using training mean and sd
data.test.std <- data.frame(x.test.std)
library(MASS)
model.lda1 <- lda(Made.Donation.in.March.2007 ~ Months.since.Last.Donation + Number.of.Donations + blood.rate,
data.train.std.c) # include additMonths.since.First.Donationional terms on the fly using I()
blood$blood.rate
str(data.train)
table(Months.since.Last.Donation)
blood$Months.since.Last.Donation <- ifelse(blood$Months.since.Last.Donation >40,39,blood$Months.since.Last.Donation)
bound <- floor((nrow(blood)/5)*2)         #define % of training and test set
blood.t <- blood[sample(nrow(blood)), ]           #sample rows
data.train <- blood.t[1:bound, ]              #get training set
data.valid <- blood.t[(bound+1):nrow(blood.t), ]    #get validation set
str(data.train)
x.train <- data.train[,c(2:5,7)]
c.train <- data.train[,6] # 2007.donations
n.train.c <- length(c.train) # 288
#data.valid <- blood.t[blood$Part=="Valid",]
x.valid <- data.valid[,c(2:5,7)]
c.valid <- data.valid[,6] # 2007 donations
n.valid.c <- length(c.valid) # 288
data.test <- read.csv("test.csv")
#data.test$Total.Volume.Donated..c.c.. <- NULL
n.test <- dim(data.test)[1] # 200
x.test <- data.test[,c(2:5,7)]
data.test$blood.rate <- data.test$Total.Volume.Donated..c.c../data.test$Months.since.First.Donation
data.test$Months.since.Last.Donation <- ifelse(data.test$Months.since.Last.Donation >40,39,data.test$Months.since.Last.Donation)
data.test$Months.since.Last.Donation <- ifelse(data.test$Months.since.Last.Donation >40,39,data.test$Months.since.Last.Donation)
data.test$Number.of.Donations = log(data.test$Number.of.Donations)
n.test <- dim(data.test)[1] # 200
x.test <- data.test[,c(2:5,7)]
n.test
str(data.test)
x.test <- data.test[,c(2:6)]
x.train.mean <- apply(x.train, 2, mean)
x.train.sd <- apply(x.train, 2, sd)
x.train.std <- t((t(x.train)-x.train.mean)/x.train.sd) # standardize to have zero mean and unit sd
apply(x.train.std, 2, mean) # check zero mean
apply(x.train.std, 2, sd) # check unit sd
data.train.std.c <- data.frame(x.train.std, Made.Donation.in.March.2007=c.train) # to classify donors
x.valid.std <- t((t(x.valid)-x.train.mean)/x.train.sd) # standardize using training mean and sd
data.valid.std.c <- data.frame(x.valid.std, Made.Donation.in.March.2007=c.valid) # to classify 2007 donors
x.test.std <- t((t(x.test)-x.train.mean)/x.train.sd) # standardize using training mean and sd
data.test.std <- data.frame(x.test.std)
library(MASS)
model.lda1 <- lda(Made.Donation.in.March.2007 ~ Months.since.Last.Donation + Number.of.Donations + blood.rate,
data.train.std.c) # include additMonths.since.First.Donationional terms on the fly using I()
model.lda1
plot(model.lda1)
pred.lda1 <- predict(model.lda1, data.valid.std.c,type="response")
lda.class=pred.lda1$class
#table(lda.class ,spring.valid$target)
mean(lda.class==data.valid.std.c$Made.Donation.in.March.2007)
model.lda2 <- lda(Made.Donation.in.March.2007 ~ Months.since.First.Donation + Months.since.Last.Donation + Number.of.Donations + blood.rate,
data.train.std.c) # include additMonths.since.First.Donationional terms on the fly using I()
model.lda2
plot(model.lda2)
pred.lda2 <- predict(model.lda2, data.valid.std.c,type="response")
lda.class=pred.lda2$class
#table(lda.class ,spring.valid$target)
mean(lda.class==data.valid.std.c$Made.Donation.in.March.2007)
submission <- data.frame(ID=data.test$X)
post.pred <- predict(model.lda2, data.test.std,type="response")
submission$Donate <-post.pred$posterior[,2]
cat("saving the submission file\n")
write_csv(submission, "blood_lda4.csv")
blood <- read.csv(file.choose()) # load the "charity.csv" file
#EDA
attach(blood)
bound <- floor((nrow(blood)/5)*2)         #define % of training and test set
blood.t <- blood[sample(nrow(blood)), ]           #sample rows
data.train <- blood.t[1:bound, ]              #get training set
data.valid <- blood.t[(bound+1):nrow(blood.t), ]    #get validation set
# set up data for analysis
x.train <- data.train[,c(2:5,7)]
c.train <- data.train[,6] # 2007.donations
n.train.c <- length(c.train) # 288
#data.valid <- blood.t[blood$Part=="Valid",]
x.valid <- data.valid[,c(2:5,7)]
c.valid <- data.valid[,6] # 2007 donations
n.valid.c <- length(c.valid) # 288
data.test <- read.csv("test.csv")
blood$blood.rate <- Total.Volume.Donated..c.c../Months.since.First.Donation
bound <- floor((nrow(blood)/5)*2)         #define % of training and test set
blood.t <- blood[sample(nrow(blood)), ]           #sample rows
data.train <- blood.t[1:bound, ]              #get training set
data.valid <- blood.t[(bound+1):nrow(blood.t), ]    #get validation set
# set up data for analysis
x.train <- data.train[,c(2:5,7)]
c.train <- data.train[,6] # 2007.donations
n.train.c <- length(c.train) # 288
x.valid <- data.valid[,c(2:5,7)]
c.valid <- data.valid[,6] # 2007 donations
n.valid.c <- length(c.valid) # 288
data.test <- read.csv("test.csv")
data.test$blood.rate <- data.test$Total.Volume.Donated..c.c../data.test$Months.since.First.Donation
n.test <- dim(data.test)[1] # 200
x.test <- data.test[,c(2:6)]
x.train.mean <- apply(x.train, 2, mean)
x.train.sd <- apply(x.train, 2, sd)
x.train.std <- t((t(x.train)-x.train.mean)/x.train.sd) # standardize to have zero mean and unit sd
apply(x.train.std, 2, mean) # check zero mean
apply(x.train.std, 2, sd) # check unit sd
data.train.std.c <- data.frame(x.train.std, Made.Donation.in.March.2007=c.train) # to classify donors
x.valid.std <- t((t(x.valid)-x.train.mean)/x.train.sd) # standardize using training mean and sd
data.valid.std.c <- data.frame(x.valid.std, Made.Donation.in.March.2007=c.valid) # to classify 2007 donors
x.test.std <- t((t(x.test)-x.train.mean)/x.train.sd) # standardize using training mean and sd
data.test.std <- data.frame(x.test.std)
model.lda1 <- lda(Made.Donation.in.March.2007 ~ Months.since.Last.Donation + Number.of.Donations + blood.rate,
data.train.std.c) # include additMonths.since.First.Donationional terms on the fly using I()
model.lda1
plot(model.lda1)
pred.lda1 <- predict(model.lda1, data.valid.std.c,type="response")
lda.class=pred.lda1$class
#table(lda.class ,spring.valid$target)
mean(lda.class==data.valid.std.c$Made.Donation.in.March.2007)
model.lda2 <- lda(Made.Donation.in.March.2007 ~ Months.since.First.Donation + Months.since.Last.Donation + Number.of.Donations + blood.rate,
data.train.std.c) # include additMonths.since.First.Donationional terms on the fly using I()
model.lda2
plot(model.lda2)
pred.lda2 <- predict(model.lda2, data.valid.std.c,type="response")
lda.class=pred.lda2$class
#table(lda.class ,spring.valid$target)
mean(lda.class==data.valid.std.c$Made.Donation.in.March.2007)
submission <- data.frame(ID=data.test$X)
post.pred <- predict(model.lda2, data.test.std,type="response")
post.pred <- predict(model.lda1, data.test.std,type="response")
submission$Donate <-post.pred$posterior[,2]
cat("saving the submission file\n")
write_csv(submission, "blood_lda5.csv")
submission <- data.frame(ID=data.test$X)
post.pred <- predict(model.lda2, data.test.std,type="response")
submission$Donate <-post.pred$posterior[,2]
cat("saving the submission file\n")
write_csv(submission, "blood_lda6.csv")
